cmake_minimum_required(VERSION 3.21)

project(Solitaire-2.0)

set(LIBRARY_OUTPUT_PATH build/)
set(BINARY_OUTPUT_PATH build/)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_CXX_STANDARD 17)

add_subdirectory(${PROJECT_SOURCE_DIR}/Code)

#ChatGPT bullshit


set(CPACK_PACKAGE_NAME "Solitaire")
set(CPACK_PACKAGE_VERSION "2.0.0")
set(CPACK_PACKAGE_VENDOR "Nelka")
set(CPACK_PACKAGE_DESCRIPTION "Solitaireeee")
set(CPACK_RESOURCE_FILE_LICENSE ${PROJECT_SOURCE_DIR}/LICENSE)

#set(CPACK_COMPONENTS_ALL Solitaire)
#set(CPACK_COMPONENT_SOLITAIRE_DEPENDENCIES jsoncpp)

set(CPACK_GENERATOR "NSIS")

if(CPACK_GENERATOR STREQUAL "NSIS")
  target_link_options(Solitaire PRIVATE -static)
endif()

set(CPACK_PACKAGE_DIRECTORY ${PROJECT_BINARY_DIR})
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}")
set(CPACK_PACKAGE_EXECUTABLES Solitaire Solitaire)

install(TARGETS Solitaire DESTINATION bin)
install(DIRECTORY ${PROJECT_SOURCE_DIR}/Code/Include/ DESTINATION include)
install(DIRECTORY "C:/msys64/mingw64/include/json" DESTINATION include/json)
install(FILES ${EXECUTABLE_OUTPUT_PATH}/Properties.json DESTINATION bin)
install(FILES "C:/msys64/mingw64/lib/libjsoncpp.a" DESTINATION lib)

#set(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib)
#set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

set(CPACK_NSIS_INSTALL_ROOT "C:\\Program Files (x86)")
set(CPACK_NSIS_MODIFY_PATH OFF)
set(CPACK_NSIS_DISPLAY_NAME "Solitaire")

include(CPack)